[config]
default_to_workspace = false
skip_core_tasks = true

[env]
ARCH = "aarch64-unknown-tkern"
OUT_DIR = "target/${ARCH}/debug"
TKERN_TARGET_BOARD = "raspi3b" # or raspi4

[env.release]
OUT_DIR = "target/${ARCH}/release"
ADDITIONAL_CARGO_ARGS = "--release"

[tasks.default]
alias = "build"

[tasks.doc]
command = "cargo"
args = ["doc", "--target", "${ARCH}.json", "-Zbuild-std=core,alloc", "@@split(CARGO_MAKE_TASK_ARGS,;)"]

[tasks.docs]
alias = "doc"

[tasks.build]
command = "rust-objcopy"
args = ["--strip-all", "-O", "binary", "${OUT_DIR}/tkern", "${OUT_DIR}/tkern.img"]
dependencies = [
    "build_cargo",
    "get_env"
]

[tasks.build_cargo]
private = true
command = "cargo"
args = ["build", "--target", "${ARCH}.json", "-Zbuild-std=core,alloc"]
dependencies = [ "get_env" ]

[tasks.grcov]
script = '''
cargo test --workspace --all-targets
grcov target/coverage/tkern/ --llvm --ignore build.rs -s . --binary-path ./target/debug/ -t html --branch -o ./target/coverage
'''
env = { RUSTFLAGS = "-Cinstrument-coverage", LLVM_PROFILE_FILE = "${CARGO_MAKE_WORKING_DIRECTORY}/target/coverage/tkern/tkern-%p-%m.profraw" }

[tasks.run]
private = false
extend = "subcommand"
env = { SUBCOMMAND_PREFIX = "run" }

[tasks.subcommand]
private = true
script = '''
#!@duckscript

cm_run_task ${SUBCOMMAND_PREFIX}_${1}
'''

[tasks.run_qemu]
private = true # extends from `tasks.run`
command = "qemu-system-aarch64"
args = ["-machine", "raspi3b", "-serial", "stdio", "-kernel", "${OUT_DIR}/tkern.img"]
dependencies = ["build"]

[tasks.run_qemu_gdb]
private = true # extends from `tasks.run`
command = "qemu-system-aarch64"
args = ["-machine", "raspi3b", "-serial", "stdio", "-kernel", "${OUT_DIR}/tkern.img", "-s", "-S"]
dependencies = ["build"]

[tasks.lints]
script = "cargo fmt --all && cargo clippy --workspace --all-targets"

[tasks.get_env]
script_runner = "@duckscript"
script = '''
board = get_env TKERN_TARGET_BOARD
rustflags = get_env RUSTFLAGS
if eq ${board} "raspi3b"
    rustflags = concat ${rustflags} "-C target-cpu=cortex-a53"
elseif eq ${board} "raspi4"
    rustflags = concat ${rustflags} "-C target-cpu=cortex-a72"
else
    echo "Unknown board: ${board}"
    exit 1
end
set_env RUSTFLAGS ${rustflags}
'''
